{"version":3,"file":"absolute-router.min.js","sources":["../src/lib/route_tree.js","../src/lib/throw_error.js","../src/lib/url_stuff.js","../src/lib/return_view.js","../src/lib/router.js"],"sourcesContent":["import { getURL, getSearch } from './url_stuff.js';\nimport View from './return_view.js';\n\nfunction createBranch(parent, phrase){\n\n    if(parent[phrase]){\n        return parent[phrase];\n    }\n\n    let info = {\n        name: phrase,\n        child: null,\n        parent: parent,\n        children: []\n    };\n\n    let branch = {__info: info};\n\n    const setParam = type => {\n        info.type = type;\n        info.property = phrase.slice(1);\n        if(parent.__info.child){\n            throw new Error(`Parent branch ${parent.name} already has a child.`);\n        }\n        parent.__info.child = phrase;\n    };\n\n    const setPattern = type => {\n        let [m, pattern, name] = phrase.match(/^\\{([\\s\\S]+?)\\}([\\s\\S]+)$/);\n        info.type = type;\n        info.property = name;\n        info.pattern = new RegExp(pattern);\n        parent.__info.children.push(phrase);\n    };\n\n    if(phrase.length){\n        info.property = phrase;\n        if(phrase[0] === ':'){\n            setParam('parameter');\n        }else if(phrase[0] === '*'){\n            setParam('splat');\n        }else if(/^\\{[\\s\\S]+?\\}[\\s\\S]+$/.test(phrase)){\n            setPattern('regex');\n        }else if(/^[0-5]{3}/.test(phrase)){\n            info.type = 'error';\n        }else{\n            info.type = 'normal';\n        }\n    }\n\n    parent[phrase] = branch;\n    return branch;\n}\n\nexport function createRouteTree(base, path, handler){\n\n    const createLeaf = (branch) => {\n        branch.__info.handler = handler;\n        branch.__info.children = [];\n        branch.__info.path = path;\n        return base;\n    };\n\n    if(path === '/'){\n        base.__info = {\n            type: 'root'\n        };\n\n        return createLeaf(base);\n    }\n\n    let leaf = path.split('/').slice(1).reduce(createBranch, base);\n    return createLeaf(leaf);\n}\n\nexport class RouteResolver {\n    constructor(router, address, args, base){\n        this.router = router;\n        this.args = args;\n        this.address = address;\n        this.url = router.location = getURL(address, base);\n        this.pathname = this.url.pathname;\n        this.handler = null;\n        this.found = false;\n        this.params = {};\n        router.location = this.url;\n        this._route = null;\n    }\n    set route(route){\n        if(!route){ return; }\n        this._route = route;\n        this.handler = route.__info.handler;\n        this.found = true;\n        this.search = getSearch(this.url);\n    }\n    get route(){\n        return this._route;\n    }\n    get views(){\n        if(!this.route){\n            return {};\n        }\n        return this.route.__info.views;\n    }\n    matchRoute(){\n        //Do not change this method except for bugs, or clean up.\n        //Leave the algorithm intact.\n\n        let routes = this.router.routes;\n        let path = this.pathname;\n\n        if(path === '/' && routes.__info){\n            this.route = routes;\n            return this;\n        }\n\n        let parts = path.split('/').slice(1),\n            current = routes,\n            previous,\n            len = parts.length,\n            params = this.params,\n            section,\n            i = 0;\n\n        const setParam = (branch, value)=>{\n            params[branch.__info.property] = value;\n        };\n\n        const getChild = (branch)=>{\n            if(branch.__info.child){\n                return branch[branch.__info.child];\n            }\n        };\n\n        const matchChildren = (branch, section)=>{\n            let children = branch.__info.children, child;\n\n            const matchChild = (child)=>{\n                return section.match(child.__info.pattern);\n            };\n\n            for(let i=0; i<children.length; i++){\n                let child = branch[children[i]];\n                let match = matchChild(child);\n\n                if(match){\n                    setParam(child, match);\n                    return (current = branch[child.__info.name]);\n                }\n            }\n\n            return branch;\n        };\n\n        const useSplat = (branch)=>{\n            let value = [];\n            for(; i<len; i++){\n                if(branch[parts[i]]){\n                    break;\n                }\n                value.push(parts[i]);\n            }\n            setParam(branch, value);\n        };\n\n        for(i=0; i<len; i++){\n            let info;\n            section = parts[i];\n\n            previous = current;\n            current = current[section];\n\n            if(!current){\n\n                if(previous.__info.children.length){\n                    matchChildren(previous, section);\n                }\n\n                current = getChild(previous);\n\n                if(!current){ break; }\n            }\n\n            if(current.__info.type === 'parameter'){\n                setParam(current, section);\n            }else if(current.__info.type === 'splat'){\n                useSplat(current);\n            }\n        }\n\n        if(current){\n            this.route = current;\n        }\n\n        return this;\n    }\n    _getArguments(){\n        return [this.params, this.search].concat(this.args);\n    }\n    runRoute(){\n\n        if(!this.found){\n            let e = new Error('not found');\n            e.status = 404;\n            return Promise.reject(e);\n        }\n\n        return this.handler.apply(\n            this.router, this._getArguments()\n        );\n    }\n    resolve(){\n        return Promise.resolve()\n        .then(()=>this.matchRoute().runRoute());\n    }\n}\n","export function throwError(message, data={}){\n    const e = new Error(''+message);\n    Object.keys(data).forEach(key=>e[key]=data[key]);\n    return Promise.reject(e);\n}\n","const getSearch = (()=>{\n    if(typeof window !== 'undefined' && typeof document !== 'undefined'){\n        if(window['URLSearchParams']){\n            return function getSearch1(url){\n                let full = {};\n                let search = new URLSearchParams(url.search);\n                let entries = search.entries();\n                while(true){\n                    let item = entries.next();\n                    if(item.done){break;}\n                    let [key, value] = item.value;\n                    full[key] = value;\n                }\n                return full;\n                /*console.log('entries.length ',entries.length)\n                console.log('search.entries() ',search.entries());\n                return search.entries().reduce((full, [key, value])=>{\n                    full[key] = value;\n                    return full;\n                }, {});*/\n            };\n        }\n    }\n\n    return function getSearch0(url){\n        if(!url.search.length){\n            return {};\n        }\n        let str = url.search.slice(1);\n\n        return str.split('&').reduce((full, param)=>{\n            const [name, value] = param.split('=');\n            full[name] = value;\n            return full;\n        }, {});\n    };\n})();\n\nconst getURL = (()=>{\n    if(typeof window !== 'undefined' && typeof document !== 'undefined'){\n        if(window['URL']){\n            return function getURL0(loc, base){\n                if(/^http/.test(loc)){\n                    return new URL(loc, base);\n                }\n\n                return new URL(\n                    loc,\n                    window.location.origin\n                );\n            };\n        }\n        return function getURL1(loc){\n            let a = document.createElement('a');\n            a.href = loc;\n            return a;\n        };\n    }else{\n\n        return function getURL2(loc, base){\n            let u = require('url');\n            let URL = u.URL;\n            if(loc[0] === '/'){\n                return new URL(loc, base || 'http://local');\n            }\n            return new URL(loc);\n        };\n    }\n})();\n\nexport { getURL, getSearch };\n","class View {\n    constructor(store){\n        this.store = store;\n        if(isNaN(store.expire)){\n            store.expire = Infinity;\n        }\n        this.start = Date.now();\n    }\n    get expire(){\n        return this.store.expire;\n    }\n    get expired(){\n        return this.expire === Infinity ? false : Date.now() >= (this.start + this.expire);\n    }\n    respond(){\n        this.store.respond();\n    }\n}\n\nView.isView = function(val){\n    return (typeof val === 'object' && 'respond' in val && typeof val['respond'] === 'function');\n};\n\nexport default View;\n","import { getURL, getSearch } from './url_stuff.js';\nimport { createRouteTree, RouteResolver } from './route_tree.js';\nimport { throwError } from './throw_error.js';\n\nexport class Router {\n    constructor(options){\n        const self = this;\n        const relay = options['relay'];\n        const base = options['base'];\n        this['@@router'] = true;\n        this.routes = {};\n\n        if(typeof relay !== 'function'){\n            throw new Error('options.relay is not a function');\n        }\n\n        relay({\n            navigate(path, args=[]){\n                let resolver = new RouteResolver(self, path, args, base);\n                return resolver.resolve();\n            }\n        });\n    }\n    route(routes){\n        Object.keys(routes).forEach(pattern=>{\n            createRouteTree(this.routes, pattern, routes[pattern]);\n        });\n        return this;\n    }\n    reject(message, data){\n        return throwError(message, data);\n    }\n}\n\n/*export class AbsoluteRouter {\n    constructor(routes){\n        this['@@router'] = true;\n        this.routes = {};\n\n        Object.keys(routes).forEach(pattern=>{\n            this.addRoute(pattern, routes[pattern]);\n        });\n    }\n    reject(message, data){\n        return throwError(message, data);\n    }\n    addRoute(pattern, handler){\n        createRouteTree(this.routes, pattern, handler);\n        return this;\n    }\n    navigate(path, args=[]){\n        if(typeof path === 'object'){\n            path = path.url;\n        }\n        let resolver = new RouteResolver(this, path, args);\n        return resolver.resolve();\n    }\n}\n\nexport function routing(routes, options={}){\n    return new AbsoluteRouter(routes, options);\n}*/\n"],"names":["createBranch","parent","phrase","let","info","name","child","children","branch","__info","setParam","type","property","slice","Error","length","test","match","pattern","RegExp","push","createRouteTree","base","path","handler","const","createLeaf","split","reduce","throwError","message","data","e","Object","keys","forEach","key","Promise","reject","getSearch","window","document","url","full","entries","URLSearchParams","search","item","next","done","value","param","getURL","loc","URL","location","origin","a","createElement","href","require","View","store","this","isNaN","expire","Infinity","start","Date","now","prototypeAccessors","expired","respond","isView","val","RouteResolver","router","address","args","pathname","found","params","_route","route","views","matchRoute","routes","previous","section","parts","current","len","i","_getArguments","concat","runRoute","status","apply","resolve","then","Router","options","self","relay","navigate"],"mappings":"0BAGA,SAASA,EAAaC,EAAQC,GAE1B,GAAGD,EAAOC,GACN,OAAOD,EAAOC,GAGlBC,IAAIC,GACAC,KAAMH,EACNI,MAAO,KACPL,OAAQA,EACRM,aAGAC,GAAUC,OAAQL,GAEhBM,EAAW,SAAAC,GAGb,GAFAP,EAAKO,KAAOA,EACZP,EAAKQ,SAAWV,EAAOW,MAAM,GAC1BZ,EAAOQ,OAAOH,MACb,MAAM,IAAIQ,MAAM,iBAAiBb,EAAW,8BAEhDA,EAAOQ,OAAOH,MAAQJ,GA2B1B,OAhBGA,EAAOa,SACNX,EAAKQ,SAAWV,EACC,MAAdA,EAAO,GACNQ,EAAS,aACU,MAAdR,EAAO,GACZQ,EAAS,SACJ,wBAAwBM,KAAKd,GAdvB,SAAAS,GACf,MAAyBT,EAAOe,MAAM,6BAA9BC,cAASb,OACjBD,EAAKO,KAAOA,EACZP,EAAKQ,SAAWP,EAChBD,EAAKc,QAAU,IAAIC,OAAOD,GAC1BjB,EAAOQ,OAAOF,SAASa,KAAKlB,IAUb,SACN,YAAYc,KAAKd,GACtBE,EAAKO,KAAO,QAEZP,EAAKO,KAAO,UAIpBV,EAAOC,GAAUM,EACVA,EAGX,SAAgBa,EAAgBC,EAAMC,EAAMC,GAExCC,IAAMC,EAAa,SAAClB,GAIhB,OAHAA,EAAOC,OAAOe,QAAUA,EACxBhB,EAAOC,OAAOF,YACdC,EAAOC,OAAOc,KAAOA,EACdD,GAGX,MAAY,MAATC,GACCD,EAAKb,QACDE,KAAM,QAGHe,EAAWJ,IAIfI,EADIH,EAAKI,MAAM,KAAKd,MAAM,GAAGe,OAAO5B,EAAcsB,ICvEtD,SAASO,EAAWC,EAASC,sBAChCN,IAAMO,EAAI,IAAIlB,MAAM,GAAGgB,GAEvB,OADAG,OAAOC,KAAKH,GAAMI,QAAQ,SAAAC,UAAKJ,EAAEI,GAAKL,EAAKK,KACpCC,QAAQC,OAAON,GCH1BP,IAAMc,EACmB,oBAAXC,QAA8C,oBAAbC,UACpCD,OAAwB,gBAChB,SAAoBE,GAIvB,IAHAvC,IAAIwC,KAEAC,EADS,IAAIC,gBAAgBH,EAAII,QAChBF,YACV,CACPzC,IAAI4C,EAAOH,EAAQI,OACnB,GAAGD,EAAKE,KAAM,MACd,MAAmBF,EAAKG,MAAnBd,OAAKc,OACVP,EAAKP,GAAOc,EAEhB,OAAOP,GAWZ,SAAoBD,GACvB,OAAIA,EAAII,OAAO/B,OAGL2B,EAAII,OAAOjC,MAAM,GAEhBc,MAAM,KAAKC,OAAO,SAACe,EAAMQ,GAChC,MAAsBA,EAAMxB,MAAM,KAA3BtB,OAAM6C,OAEb,OADAP,EAAKtC,GAAQ6C,EACNP,WAKbS,EACmB,oBAAXZ,QAA8C,oBAAbC,SACpCD,OAAY,IACJ,SAAiBa,EAAK/B,GACzB,MAAG,QAAQN,KAAKqC,GACL,IAAIC,IAAID,EAAK/B,GAGjB,IAAIgC,IACPD,EACAb,OAAOe,SAASC,SAIrB,SAAiBH,GACpBlD,IAAIsD,EAAIhB,SAASiB,cAAc,KAE/B,OADAD,EAAEE,KAAON,EACFI,GAIJ,SAAiBJ,EAAK/B,GACzBnB,IACImD,EADIM,QAAQ,OACJN,IACZ,MAAc,MAAXD,EAAI,GACI,IAAIC,EAAID,EAAK/B,GAAQ,gBAEzB,IAAIgC,EAAID,ICjErBQ,EAAK,SACKC,GACZC,KAASD,MAAQA,EACVE,MAAMF,EAAMG,UACfH,EAAUG,OAASC,EAAAA,GAEvBH,KAASI,MAAQC,KAAKC,gCAE1BC,EAAIL,sBACA,OAAWF,KAAKD,MAAMG,QAE1BK,EAAIC,uBACA,OAAWR,KAAKE,SAAWC,EAAAA,GAAmBE,KAAKC,OAAUN,KAAKI,MAAQJ,KAAKE,QAEnFJ,YAAIW,mBACAT,KAASD,MAAMU,kDAInBX,EAAKY,OAAS,SAASC,GACnB,MAAuB,iBAARA,GAAoB,YAAaA,GAAiC,mBAAnBA,EAAa,SHuD/E,IAAaC,EAAc,SACXC,EAAQC,EAASC,EAAMxD,GACnCyC,KAASa,OAASA,EAClBb,KAASe,KAAOA,EAChBf,KAASc,QAAUA,EACnBd,KAASrB,IAAMkC,EAAOrB,SAAWH,EAAOyB,EAASvD,GACjDyC,KAASgB,SAAWhB,KAAKrB,IAAIqC,SAC7BhB,KAASvC,QAAU,KACnBuC,KAASiB,OAAQ,EACjBjB,KAASkB,UACTL,EAAWrB,SAAWQ,KAAKrB,IAC3BqB,KAASmB,OAAS,4BAEtBZ,EAAIa,mBAAUA,GACFA,IACRpB,KAASmB,OAASC,EAClBpB,KAASvC,QAAU2D,EAAM1E,OAAOe,QAChCuC,KAASiB,OAAQ,EACjBjB,KAASjB,OAASP,EAAUwB,KAAKrB,OAErC4B,EAAIa,qBACA,OAAWpB,KAAKmB,QAEpBZ,EAAIc,qBACA,OAAQrB,KAAKoB,MAGFpB,KAAKoB,MAAM1E,OAAO2E,UAEjCT,YAAIU,sBAIA,IAAQC,EAASvB,KAAKa,OAAOU,OACrB/D,EAAOwC,KAAKgB,SAEpB,GAAgB,MAATxD,GAAgB+D,EAAO7E,OAE1B,OADAsD,KAASoB,MAAQG,EACNvB,KAGf,IAEIwB,EAGAC,EALIC,EAAQlE,EAAKI,MAAM,KAAKd,MAAM,GAClC6E,EAAcJ,EAEdK,EAAUF,EAAM1E,OAChBkE,EAAalB,KAAKkB,OAElBW,EAAQ,EAEFlF,EAAW,SAACF,EAAQ0C,GAC1B+B,EAAWzE,EAAOC,OAAOG,UAAYsC,GAwCzC,IAAQ0C,EAAE,EAAGA,EAAED,EAAKC,IAAI,CAOpB,GALAJ,EAAcC,EAAMG,GAEpBL,EAAeG,KACfA,EAAcA,EAAQF,MAIXD,EAAS9E,OAAOF,SAASQ,QAxCd,SAACP,EAAQgF,GAO/B,IAAQrF,IANAI,EAAWC,EAAOC,OAAOF,SAMrBqF,EAAE,EAAGA,EAAErF,EAASQ,OAAQ6E,IAAI,CACpC,IAAQtF,EAAQE,EAAOD,EAASqF,IACxB3E,EANW,SAACX,GACpB,OAAWkF,EAAQvE,MAAMX,EAAMG,OAAOS,UAKXZ,GAE3B,GAAOW,EAEH,OADAP,EAAaJ,EAAOW,GACRyE,EAAUlF,EAAOF,EAAMG,OAAOJ,QA4BxBkF,EAAUC,GAGhCE,EAlDa,SAAClF,GAClB,GAAOA,EAAOC,OAAOH,MACjB,OAAWE,EAAOA,EAAOC,OAAOH,QAgDTiF,KAEL,MAGS,cAAxBG,EAAQjF,OAAOE,KAClBD,EAAagF,EAASF,GACW,UAAxBE,EAAQjF,OAAOE,MA/BX,SAACH,GAElB,IADA,IAAQ0C,KACE0C,EAAED,IACDnF,EAAOiF,EAAMG,IADPA,IAIb1C,EAAU9B,KAAKqE,EAAMG,IAEzBlF,EAAaF,EAAQ0C,IAwBJwC,GAQrB,OAJOA,IACH3B,KAASoB,MAAQO,GAGV3B,MAEfY,YAAIkB,yBACA,OAAY9B,KAAKkB,OAAQlB,KAAKjB,QAAQgD,OAAO/B,KAAKe,OAEtDH,YAAIoB,oBAEA,IAAQhC,KAAKiB,MAAM,CACf,IAAQhD,EAAI,IAAIlB,MAAM,aAEtB,OADAkB,EAAMgE,OAAS,IACJ3D,QAAQC,OAAON,GAG9B,OAAW+B,KAAKvC,QAAQyE,MACpBlC,KAASa,OAAQb,KAAK8B,kBAG9BlB,YAAIuB,8BACA,OAAW7D,QAAQ6D,UACdC,KAAK,kBAAIpC,EAAKsB,aAAaU,qDIjN7B,IAAMK,EAAO,SACJC,GACZ,IAAUC,EAAOvC,KACPwC,EAAQF,EAAe,MACvB/E,EAAO+E,EAAc,KAI/B,GAHAtC,KAAS,aAAc,EACvBA,KAASuB,UAEe,mBAAViB,EACV,MAAU,IAAIzF,MAAM,mCAGxByF,GACIC,kBAAajF,EAAMuD,GAEf,0BADmB,IAAIH,EAAc2B,EAAM/E,EAAMuD,EAAMxD,GACnC4E,cAIhCE,YAAIjB,eAAMG,cAIN,OAHArD,OAAWC,KAAKoD,GAAQnD,QAAQ,SAAAjB,GAC5BG,EAAoB0C,EAAKuB,OAAQpE,EAASoE,EAAOpE,MAE1C6C,MAEfqC,YAAI9D,gBAAOR,EAASC,GAChB,OAAWF,EAAWC,EAASC"}