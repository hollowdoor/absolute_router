{"version":3,"file":"absolute-router.js","sources":["../src/lib/url_stuff.js","../src/lib/return_view.js","../src/lib/tree.js","../src/lib/route_tree.js","../src/lib/throw_error.js","../src/lib/router.js"],"sourcesContent":["const getSearch = (()=>{\n    if(typeof window !== 'undefined' && typeof document !== 'undefined'){\n        if(window['URLSearchParams']){\n            return function getSearch1(url){\n                let full = {};\n                let search = new URLSearchParams(url.search);\n                let entries = search.entries();\n                while(true){\n                    let item = entries.next();\n                    if(item.done){break;}\n                    let [key, value] = item.value;\n                    full[key] = value;\n                }\n                return full;\n                /*console.log('entries.length ',entries.length)\n                console.log('search.entries() ',search.entries());\n                return search.entries().reduce((full, [key, value])=>{\n                    full[key] = value;\n                    return full;\n                }, {});*/\n            };\n        }\n    }\n\n    return function getSearch0(url){\n        if(!url.search.length){\n            return {};\n        }\n        let str = url.search.slice(1);\n\n        return str.split('&').reduce((full, param)=>{\n            const [name, value] = param.split('=');\n            full[name] = value;\n            return full;\n        }, {});\n    };\n})();\n\nconst getURL = (()=>{\n    if(typeof window !== 'undefined' && typeof document !== 'undefined'){\n        if(window['URL']){\n            return function getURL0(loc, base){\n                if(/^http/.test(loc)){\n                    return new URL(loc, base);\n                }\n\n                return new URL(\n                    loc,\n                    window.location.origin\n                );\n            };\n        }\n        return function getURL1(loc){\n            let a = document.createElement('a');\n            a.href = loc;\n            return a;\n        };\n    }else{\n\n        return function getURL2(loc, base){\n            let u = require('url');\n            let URL = u.URL;\n            if(loc[0] === '/'){\n                return new URL(loc, base || 'http://local');\n            }\n            return new URL(loc);\n        };\n    }\n})();\n\nexport { getURL, getSearch };\n","class View {\n    constructor(store){\n        this.store = store;\n        if(isNaN(store.expire)){\n            store.expire = Infinity;\n        }\n        this.start = Date.now();\n    }\n    get expire(){\n        return this.store.expire;\n    }\n    get expired(){\n        return this.expire === Infinity ? false : Date.now() >= (this.start + this.expire);\n    }\n    respond(){\n        this.store.respond();\n    }\n}\n\nView.isView = function(val){\n    return (typeof val === 'object' && 'respond' in val && typeof val['respond'] === 'function');\n};\n\nexport default View;\n","export class Branch {\n    constructor({\n        parent = {},\n        phrase = ''\n    } = {}){\n\n        const info = this.__info = {\n            name: phrase,\n            type: 'normal',\n            parent,\n            property: phrase,\n            child: null,\n            children: []\n        };\n\n        parent[phrase] = this;\n\n        if(phrase[0] === ':'){\n            info.type = 'parameter';\n            info.property = phrase.slice(1);\n            parent.__info.child = phrase;\n        }else if(phrase[0] === '*'){\n            info.type = 'splat';\n            info.property = phrase.slice(1);\n            parent.__info.child = phrase;\n        }else if(/^\\{[\\s\\S]+?\\}[\\s\\S]+$/.test(phrase)){\n            let [m, pattern, name] = phrase.match(/^\\{([\\s\\S]+?)\\}([\\s\\S]+)$/);\n            info.type = 'regex';\n            info.property = name;\n            info.pattern = new RegExp(pattern);\n            parent.__info.children.push(phrase);\n        }else if(/^[0-5]{3}/.test(phrase)){\n            info.type = 'error';\n        }\n    }\n    static leafFrom(branch, {\n        path = '',\n        handler = null,\n        type = null\n    } = {}){\n        branch.__info.type = type\n        ? type\n        : branch.__info.type;\n        branch.__info.handler = handler;\n        branch.__info.children = [];\n        branch.__info.path = path;\n        return branch;\n    }\n    static create({parent, phrase}){\n        if(parent[phrase]){\n            return parent[phrase];\n        }\n        return new Branch({parent, phrase});\n    }\n}\n\nexport class Tree {\n    constuctor(){\n        this.__info = {};\n    }\n    static branch(base, {path, handler}){\n        if(path === '/'){\n            base.__info = {\n                type: 'root'\n            };\n\n            return Branch.leafFrom(base, {\n                path,\n                handler,\n                type: 'root'\n            });\n        }\n\n        let leaf = path.split('/').slice(1)\n        .reduce((parent, phrase)=>{\n            return Branch.create({parent, phrase})\n        }, base);\n\n        return Branch.leafFrom(leaf, {path, handler});\n    }\n}\n","import { getURL, getSearch } from './url_stuff.js';\nimport View from './return_view.js';\nimport { Tree, Branch } from './tree.js';\nexport { Tree };\n\nexport class RouteResolver {\n    constructor(router, address, args, base){\n        this.router = router;\n        this.args = args;\n        this.address = address;\n        this.url = router.location = getURL(address, base);\n        this.pathname = this.url.pathname;\n        this.handler = null;\n        this.found = false;\n        this.params = {};\n        router.location = this.url;\n        this._route = null;\n    }\n    set route(route){\n        if(!route){ return; }\n        this._route = route;\n        this.handler = route.__info.handler;\n        this.found = true;\n        this.search = getSearch(this.url);\n    }\n    get route(){\n        return this._route;\n    }\n    get views(){\n        if(!this.route){\n            return {};\n        }\n        return this.route.__info.views;\n    }\n    matchRoute(){\n        //Do not change this method except for bugs, or clean up.\n        //Leave the algorithm intact.\n\n        let routes = this.router.routes;\n        let path = this.pathname;\n\n        if(path === '/' && routes.__info){\n            this.route = routes;\n            return this;\n        }\n\n        let parts = path.split('/').slice(1),\n            current = routes,\n            previous,\n            len = parts.length,\n            params = this.params,\n            section,\n            i = 0;\n\n        const setParam = (branch, value)=>{\n            params[branch.__info.property] = value;\n        };\n\n        const getChild = (branch)=>{\n            if(branch.__info.child){\n                return branch[branch.__info.child];\n            }\n        };\n\n        const matchChildren = (branch, section)=>{\n            let children = branch.__info.children, child;\n\n            const matchChild = (child)=>{\n                return section.match(child.__info.pattern);\n            };\n\n            for(let i=0; i<children.length; i++){\n                let child = branch[children[i]];\n                let match = matchChild(child);\n\n                if(match){\n                    setParam(child, match);\n                    return (current = branch[child.__info.name]);\n                }\n            }\n\n            return branch;\n        };\n\n        const useSplat = (branch)=>{\n            let value = [];\n            for(; i<len; i++){\n                if(branch[parts[i]]){\n                    break;\n                }\n                value.push(parts[i]);\n            }\n            setParam(branch, value);\n        };\n\n        for(i=0; i<len; i++){\n            let info;\n            section = parts[i];\n\n            previous = current;\n            current = current[section];\n\n            if(!current){\n\n                if(previous.__info.children.length){\n                    matchChildren(previous, section);\n                }\n\n                current = getChild(previous);\n\n                if(!current){ break; }\n            }\n\n            if(current.__info.type === 'parameter'){\n                setParam(current, section);\n            }else if(current.__info.type === 'splat'){\n                useSplat(current);\n            }\n        }\n\n        if(current){\n            this.route = current;\n        }\n\n        return this;\n    }\n    _getArguments(){\n        return [this.params, this.search].concat(this.args);\n    }\n    runRoute(){\n\n        if(!this.found){\n            let e = new Error('not found');\n            e.status = 404;\n            return Promise.reject(e);\n        }\n\n        return this.handler.apply(\n            this.router, this._getArguments()\n        );\n    }\n    resolve(){\n        return Promise.resolve()\n        .then(()=>this.matchRoute().runRoute());\n    }\n}\n","export function throwError(message, data={}){\n    const e = new Error(''+message);\n    Object.keys(data).forEach(key=>e[key]=data[key]);\n    return Promise.reject(e);\n}\n","import { getURL, getSearch } from './url_stuff.js';\nimport { RouteResolver, Tree } from './route_tree.js';\nimport { throwError } from './throw_error.js';\n\nexport class Router {\n    constructor(options){\n        const self = this;\n        const relay = options['relay'];\n        const base = options['base'];\n        this['@@router'] = true;\n        //this.routes = {};\n        this.routes = new Tree();\n\n        if(typeof relay !== 'function'){\n            throw new Error('options.relay is not a function');\n        }\n\n        relay({\n            navigate(path, args=[]){\n                let resolver = new RouteResolver(self, path, args, base);\n                return resolver.resolve();\n            }\n        });\n    }\n    route(routes){\n        Object.keys(routes).forEach(pattern=>{\n            Tree.branch(this.routes, {\n                path: pattern,\n                handler: routes[pattern]\n            });\n            //createRouteTree(this.routes, pattern, routes[pattern]);\n        });\n        return this;\n    }\n    reject(message, data){\n        return throwError(message, data);\n    }\n}\n\n/*export class AbsoluteRouter {\n    constructor(routes){\n        this['@@router'] = true;\n        this.routes = {};\n\n        Object.keys(routes).forEach(pattern=>{\n            this.addRoute(pattern, routes[pattern]);\n        });\n    }\n    reject(message, data){\n        return throwError(message, data);\n    }\n    addRoute(pattern, handler){\n        createRouteTree(this.routes, pattern, handler);\n        return this;\n    }\n    navigate(path, args=[]){\n        if(typeof path === 'object'){\n            path = path.url;\n        }\n        let resolver = new RouteResolver(this, path, args);\n        return resolver.resolve();\n    }\n}\n\nexport function routing(routes, options={}){\n    return new AbsoluteRouter(routes, options);\n}*/\n"],"names":["const","let","prototypeAccessors","child","this"],"mappings":"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"}